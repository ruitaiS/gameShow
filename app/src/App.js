import React, {useState, useEffect} from 'react';
// import './App.css';
import GameShow from './Components/GameShow';
import ReactCamera from './Components/ReactCamera';
import {Line} from 'draw-shape-reactjs';

function drawLine(x1, y1, x2, y2){
    return(
        <Line from={[x1, y1]} to={[x2, y2]} color='#1DBFE7'/>
    );
}

class Figure extends React.Component{
    drawFigure(){

        //Can put these as parameters later if needed
        let scale = 1000;
        let yOffset = 0;
        let xOffset = 0;

        let output = [];        
        for (let i = 0; i < this.props.segments.length + 1; i += 2){
            let x1 = this.props.joints[2*this.props.segments[i]];
            let y1 = this.props.joints[2*this.props.segments[i]+1];
            let x2 = this.props.joints[2*this.props.segments[i+1]];
            let y2 = this.props.joints[2*this.props.segments[i+1]+1];

            if (x1 > 0 && y1 > 0 && x2 > 0 && y2 > 0){
                output.push(
                    drawLine(x1*scale+xOffset, y1*scale+yOffset,
                        x2*scale+xOffset, y2*scale+yOffset)
                );
            };
        };

        //Draw Boundary Box (Testing Only)
        //(0,0) -> (1,0)
        output.push(drawLine(xOffset, yOffset, scale + xOffset, yOffset));
        //(0,0) -> (0,1)
        output.push(drawLine(xOffset, yOffset, xOffset, scale + yOffset));
        //(1,0) -> (1,1)
        output.push(drawLine(scale + xOffset, yOffset, scale + xOffset, scale + yOffset));
        //(0,1) -> (1,1)
        output.push(drawLine(xOffset, scale + yOffset, scale + xOffset, scale + yOffset));
        return output;
    }
    render(){
        return (<div>{this.drawFigure()}</div>);
    }
}

class Game extends React.Component{
    constructor(props){
        super(props);
        //sTF function is sent as a parameter to ReactCamera, so we need to ensure "this" is bound to the Game instance
        this.sendToFlask = this.sendToFlask.bind(this);

        this.state = {
            //Init with Default JSON Placeholder
            joints: JSON.parse('{"file_info":{"joint_definitions":{"hands":"hand21","head":"wrFace20","pose2d":"j25","pose3d_ik":"extended","pose3d_raw":"j25"}},"frames":[{"frame_time":0,"height":3532,"persons":[{"head_pose":{"bbox":{"height":0.1146659106016159,"minX":0.399773508310318,"minY":0.2565118968486786,"width":0.1146659106016159},"face_arrow":{"base":[0.46573203802108765,0.3157695233821869],"tip":[0.5154340863227844,0.2688548266887665]},"landmarks":[0.4669605493545532,0.3510216772556305,0.43157538771629333,0.326386421918869,0.44142946600914,0.3080219626426697,0.4365024268627167,0.30309492349624634,0.4481481909751892,0.34475088119506836,0.44142946600914,0.2995116114616394,0.4553148150444031,0.3317613899707794,0.4494919180870056,0.3089177906513214,0.44904401898384094,0.3026469945907593,0.45576271414756775,0.3116052746772766,0.4593460261821747,0.32190728187561035,0.48174169659614563,0.3223552107810974,0.46248140931129456,0.3102615475654602,0.45979392528533936,0.3048865795135498,0.4781584143638611,0.3438550531864166,0.46516889333724976,0.30040743947029114,0.4723355174064636,0.33400097489356995,0.46920013427734375,0.3107094466686249,0.4714396893978119,0.30443865060806274,0.4633772373199463,0.33131349086761475]},"id":0,"pose2d":{"bbox":{"height":1.017052173614502,"minX":0.17344334721565247,"minY":0.024667322635650635,"width":0.7780347466468811},"is_main":true,"joints":[0.7031022310256958,0.9217901825904846,0.7265412211418152,0.7304983735084534,0.7070966958999634,0.5507307052612305,0.7266349792480469,0.4882248640060425,0.8866418600082397,0.32805612683296204,0.8438493609428406,0.17960655689239502,0.7168658375740051,0.5194777846336365,0.5409532189369202,0.3868039846420288,0.5390177369117737,0.38681796193122864,0.4569843113422394,0.31386780738830566,0.2382795810699463,0.41785600781440735,0.3514482080936432,0.4258462190628052,0.4765131175518036,0.4180503785610199,0.6053934097290039,0.3555575907230377,0.7265907526016235,0.32416844367980957,0.8398270010948181,0.28112733364105225,0.4335137605667114,0.3242572546005249,-0.003906250465661287,-0.00390625,-0.003906250465661287,-0.00390625,0.44535478949546814,0.3047938048839569,0.4920843541622162,0.3125523328781128,0.6095114350318909,0.9569650888442993,0.8360527753829956,0.10942166298627853,0.7226426601409912,0.9530225992202759,0.8163356184959412,0.17977823317050934],"scores":[0.9934269189834595,0.8767242431640625,0.9107080698013306,0.8118381500244141,0.9291325211524963,0.9388746023178101,0.8612731099128723,0.9399352669715881,1.0258841514587402,0.9648143649101257,0.9600675106048584,0.9170497059822083,0.8863959312438965,0.9934746026992798,1.015063762664795,0.9641562104225159,0.9574224352836609,0.0,0.0,0.9749346375465393,0.9620858430862427,0.9436413049697876,0.953711748123169,0.983814537525177,0.9186974763870239]}}],"width":3532}]}').frames[0].persons[0].pose2d.joints,
            
            //Pairs of connected indices in JSON array
            segments: [0,21, 0,23, 0,1, 1,2, 2,6, 2,12, 6,3, 3,13, 3,4, 4,5, 5,24, 5,22, 13,14, 14,15, 12,11, 11,10, 12,8, 8,7, 7,13, 8,9, 18,20],

            //TODO Implement Shapes
            shapes: [0,1,2,3,4,5,6,7,8,9,10],
            shapeIndex: 0,
        };

    }

    updateJoints(str){
        this.setState({joints: JSON.parse(str).frames[0].persons[0].pose2d.joints});
    }

    nextShape(){
        this.setState({shapeIndex: Math.floor((Math.random() * this.state.shapes.length))});
    }

    sendToFlask(img){

        let xhr = new XMLHttpRequest();
        xhr.addEventListener('load', () => {
            this.updateJoints(xhr.responseText);
        })
        // open the request with the verb and the url
        xhr.open('POST', 'http://localhost:5000/img');
        // send the request
        xhr.send(img);
    }  

    render(){
        //TODO: Figure out how to make this prettier / Centered Properly
        return(
            <div>
            <Figure joints={this.state.joints} segments={this.state.segments} />
            <ReactCamera sendToFlask={this.sendToFlask}/>
            <div class = "centered">
                <button onClick={()=>this.updateJoints('{"file_info":{"joint_definitions":{"hands":"hand21","head":"wrFace20","pose2d":"j25","pose3d_ik":"extended","pose3d_raw":"j25"}},"frames":[{"frame_time":0,"height":1280,"persons":[{"hand_pose":{"left":{"bbox":{"height":0.18984374403953552,"minX":0.7282043695449829,"minY":0.4613487124443054,"width":0.12656250596046448},"is_main":false,"joints":[0.8104108572006226,0.4999658465385437,0.7985317707061768,0.5014351010322571,0.7866384387016296,0.5371979475021362,0.7935616374015808,0.5460874438285828,0.7995197772979736,0.5505169630050659,0.8045086860656738,0.5519775152206421,0.7886146903038025,0.5059720277786255,0.7777429223060608,0.5148224234580994,0.7678540945053101,0.5208171606063843,0.786628782749176,0.5401411652565002,-1.0,-1.0,-1.0,-1.0,0.7925760746002197,0.5490442514419556,-1.0,-1.0,-1.0,-1.0,0.797617495059967,0.5535499453544617,-1.0,-1.0,-1.0,-1.0,0.8044776916503906,0.5564659833908081,-1.0,-1.0,-1.0,-1.0],"scores":[0.8935565948486328,0.8553706407546997,0.9474583864212036,0.8909592032432556,0.9395545125007629,0.8483965992927551,0.8696543574333191,0.9174726605415344,0.9211112260818481,0.4615866541862488,0.0,0.0,0.2689455449581146,0.0,0.0,0.5101548433303833,0.0,0.0,0.6643750071525574,0.0,0.0]},"right":{"bbox":{"height":0.18984374403953552,"minX":0.6070603728294373,"minY":0.5026585459709167,"width":0.12656250596046448},"is_main":false,"joints":[0.6803429126739502,0.5457755327224731,0.6813281178474426,0.5531819462776184,0.6695014834403992,0.5784525275230408,0.6724139451980591,0.5858861207962036,0.6803368330001831,0.5903388857841492,0.6774387955665588,0.5829259157180786,0.6803959608078003,0.5665422081947327,0.6783965229988098,0.5799484252929688,0.6754491329193115,0.5888548493385315,0.6734208464622498,0.5948082208633423,0.6754541993141174,0.6067134141921997,0.6793690919876099,0.617097795009613,0.6734092235565186,0.5948575735092163,0.6764131188392639,0.6082026362419128,0.6813532114028931,0.6200602650642395,0.6763941645622253,0.5962550640106201,0.6813735961914063,0.6037306189537048,0.6843560338020325,0.6141334772109985,0.6814046502113342,0.5933302640914917,0.6833641529083252,0.6007422804832458,0.6863231062889099,0.6067185997962952],"scores":[0.8790488839149475,0.9031910300254822,0.8667550683021545,0.23977689445018768,0.11985307931900024,0.1798589676618576,0.9563273191452026,0.9514999389648438,0.9270026087760925,0.9572526216506958,0.9059444069862366,0.8876404762268066,0.7056261897087097,0.7067156434059143,0.8820692300796509,0.4823644459247589,0.7044984102249146,0.8102599382400513,0.5660151839256287,0.908909261226654,0.9170357584953308]}},"head_pose":{"bbox":{"height":0.10390625149011612,"minX":0.6708333492279053,"minY":0.140625,"width":0.06927083432674408},"face_arrow":{"base":[0.692371129989624,0.2081771045923233],"tip":[0.6378000974655151,0.20812693238258362]},"landmarks":[0.7027628421783447,0.24047240614891052,0.6954569220542908,0.21814879775047302,0.6919392943382263,0.20069579780101776,0.6911275386810303,0.19257812201976776,0.7000569701194763,0.23925475776195526,0.6913980841636658,0.19014282524585724,0.6965392827987671,0.22667236626148224,0.6943746209144592,0.19663695991039276,0.6938334107398987,0.18851928412914276,0.694915771484375,0.1913604736328125,0.6905863285064697,0.20881347358226776,0.728198230266571,0.19501343369483948,0.7000569701194763,0.19095459580421448,0.6968098878860474,0.18283692002296448,0.7187276482582092,0.22829589247703552,0.7014099359512329,0.17756041884422302,0.7054687738418579,0.21814879775047302,0.7068216800689697,0.185272216796875,0.707904040813446,0.17674866318702698,0.6962687373161316,0.21936646103858948]},"id":0,"pose2d":{"bbox":{"height":0.8861425518989563,"minX":0.6364994645118713,"minY":0.1135442703962326,"width":0.26865851879119873},"is_main":true,"joints":[0.7188019752502441,0.8634029030799866,0.7291774749755859,0.7069492936134338,0.7187160849571228,0.5429415106773376,0.7761033773422241,0.5351670384407043,0.8099292516708374,0.7030308842658997,0.8620339632034302,0.8555199503898621,0.7474097609519958,0.539054274559021,0.7448116540908813,0.28710246086120605,0.744836151599884,0.28900378942489624,0.7056902050971985,0.19266176223754883,0.6796478629112244,0.5430589914321899,0.6980020999908447,0.4336284101009369,0.703166663646698,0.30474358797073364,0.7864565849304199,0.26946136355400085,0.8384870886802673,0.38678592443466187,0.8072388768196106,0.49990493059158325,0.6926767230033875,0.2031034529209137,-0.0026041665114462376,-0.00390625,-0.0026041665114462376,-0.00390625,0.697852611541748,0.18738947808742523,0.72654128074646,0.18749237060546875,0.6588876843452454,0.8985525965690613,0.8230056166648865,0.9258415699005127,0.7370005249977112,0.8946163058280945,0.882769763469696,0.8673000335693359],"scores":[0.9478542804718018,0.8805575966835022,0.8569633364677429,0.8657121062278748,0.9200289845466614,0.9749786853790283,0.8613377213478088,0.8877078890800476,0.9100452661514282,0.9732975363731384,0.9588284492492676,0.9401715993881226,0.8854359984397888,0.8899797797203064,0.9623841047286987,0.913408637046814,1.0009140968322754,0.0,0.0,0.9790746569633484,0.9399037957191467,0.9381367564201355,0.9672982692718506,0.9693667888641357,0.9036563634872437]}}],"width":1920}]}')}>Update Joints</button>
                <button onClick={()=>alert(this.state.joints)}>Show Joints</button>
                <button onClick={()=>this.nextShape()}>Pick Shape</button>
                <button onClick={()=> alert(this.state.shapes[this.state.shapeIndex])}>Show Shape</button>
            </div>
            </div>
        );
    }//end render

    
    

}

function App () {
    return <Game/> ;
}

export default App;
